OOP - Uma forma de organizar problemas da vida real dentro de programas representando seus dados e comportamentos por meio de classes e objetos

Classe - Espécie geral (carro)

Objeto/Instância - Variavel de uma 'espécie' (ferrari)

Métodos - Funções que representam "comportamentos" relacionadas a um objeto ou classe

Construtores - Métodos inicializados toda vez que um novo objeto é criado.

Encapsulamento:
    Privado: Não é possivel acessar fora da class, apenas com getters e setters
    Público: É possivel acessar fora da classe
    Protegido: Podem ser acessados dentro da classe e por classes herdeiras

Herança: Uma classe herdar características em comum de outra

Polimorfismo - Diferentes execuções para um mesmo método
    Compile time: compilador decide qual método será escolhido
        Function Overloading: O compilador decide qual função chamar com base nos argumentos passado
        Operator Overloading: ...
    Run Time: ....
        Virtual Function: ...

Classe abstrata:
    uma classe que serve como modelo de como as heranças dessa classe deve se comportar
    possui uma função virtual: "virtual void Area()=0" //qual é a diferença de função virtual/class abstrata e Polimorfismo